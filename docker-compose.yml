services:
  # ---------- Certificate checker ----------
  cert-checker:
    image: alpine
    user: ${CONTAINER_USER:-nobody}
    container_name: pastepoint-cert-checker
    entrypoint: |
      sh -c '
      if [ ! -f /etc/ssl/${CERT_MOUNT:-pastepoint}/cert.pem ] || [ ! -f /etc/ssl/${CERT_MOUNT:-pastepoint}/key.pem ]; then
        echo "ERROR: Missing SSL certificates!"
        echo "Please create ${CERT_PATH:-/etc/ssl/pastepoint} directory with cert.pem and key.pem files"
        echo "Use generate-certs.sh script to generate self-signed certificates for development or provide your own for production."
        echo "Exiting..."
        exit 1
      fi
      echo "Certificates exist, continuing..."
      '
    volumes:
      - ${CERT_PATH:-/etc/ssl/pastepoint}:/etc/ssl/${CERT_MOUNT:-pastepoint}:ro
    restart: 'no'

  # ---------- Server container ----------
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
      args:
        RUST_BUILD_MODE: ${RUST_BUILD_MODE:-release}
    container_name: pastepoint-server
    ports:
      - '9000:9000'
    environment:
      - RUN_ENV=${SERVER_ENV:-production}
    volumes:
      - ${CERT_PATH:-/etc/ssl/pastepoint}:/etc/ssl/${CERT_MOUNT:-pastepoint}:ro
    depends_on:
      cert-checker:
        condition: service_completed_successfully
    restart: always

  # ---------- Angular SSR container ----------
  ssr:
    build:
      context: .
      dockerfile: client/Dockerfile
      target: ssr
      args:
        NPM_BUILD_CONFIG: ${NPM_BUILD_CONFIG:-docker}
    container_name: pastepoint-ssr
    environment:
      PORT: ${PORT:-4000}
      HOST: ${HOST:-0.0.0.0}
    expose:
      - '4000'
    depends_on:
      server:
        condition: service_started
    restart: always

  # ---------- NGINX container ----------
  nginx:
    build:
      context: .
      dockerfile: client/Dockerfile
      target: nginx
    container_name: pastepoint-nginx
    environment:
      SERVER_NAME: ${SERVER_NAME:-pastepoint.com}
      SSL_CERT_PATH: ${SSL_CERT_PATH:-/etc/ssl/pastepoint/cert.pem}
      SSL_CERT_KEY_PATH: ${SSL_CERT_KEY_PATH:-/etc/ssl/pastepoint/key.pem}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ${CERT_PATH:-/etc/ssl/pastepoint}:/etc/ssl/${CERT_MOUNT:-pastepoint}:ro
    depends_on:
      ssr:
        condition: service_healthy
    restart: always
