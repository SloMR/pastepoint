server_tokens off;

# Gzip
gzip on;
gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml image/svg+xml;

# Map HTTP upgrade to connection upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Upstream to your Actix server (Docker service on port 9000)
upstream backend_ws {
    server server:9000;
}

# Upstream to Angular SSR server
upstream ssr_server {
    server ssr:4000;
}

# Include rate limiting and security settings
include /etc/nginx/security/security_settings.conf;

# Include SSL configuration
include /etc/nginx/ssl.conf;

# Server configurations
server {
    listen 443 ssl;
    http2 on;
    server_name ${SERVER_NAME};

    ssl_certificate ${SSL_CERT_PATH};
    ssl_certificate_key ${SSL_CERT_KEY_PATH};

    include /etc/nginx/security/security_headers.conf;

    # Block bad bots and suspicious user agents
    if ($http_user_agent ~* (nmap|nikto|sqlmap|masscan|recon-ng|zmeu|dirbuster|gobuster|metasploit)) {
        return 403;
    }

    # Block empty user agents
    if ($http_user_agent = "") {
        return 403;
    }

    # Include location blocks
    include /etc/nginx/locations.conf;
}

# Server block to handle www to non-www redirects
server {
    listen 80;
    listen 443 ssl;
    http2 on;
    server_name www.${SERVER_NAME};

    # Redirect all traffic from www to non-www
    return 301 https://${SERVER_NAME}$request_uri;
}

server {
    listen 80;
    http2 on;
    server_name ${SERVER_NAME};

    # Health check endpoint
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}
