# Root and main locations
location = / {
    limit_req   zone=root_req_limit burst=40 nodelay;
    include /etc/nginx/includes/common_rate_limiting.conf;
    include /etc/nginx/security/security_headers.conf;

    # Proxy to SSR server
    include /etc/nginx/includes/common_proxy_ssr.conf;

    # Add cache-busting headers
    include /etc/nginx/includes/common_cache_busting.conf;
}

location @redirect {
    limit_req   zone=root_req_limit burst=40 nodelay;
    limit_conn  conn_limit  10;
    include /etc/nginx/includes/common_rate_limiting.conf;

    # Include security headers
    include /etc/nginx/security/security_headers.conf;

    # Redirect to the root URL
    return 301 /;
}

# SSR location
# This is the main location that handles all requests
location / {
    limit_req   zone=general_req_limit burst=50;
    limit_conn conn_limit   10;
    include /etc/nginx/includes/common_rate_limiting.conf;
    include /etc/nginx/security/security_headers.conf;

    # Proxy to SSR server
    include /etc/nginx/includes/common_proxy_ssr.conf;

    # Add cache-busting headers
    include /etc/nginx/includes/common_cache_busting.conf;
}

# Privacy and terms location
location /privacy {
    limit_req   zone=general_req_limit burst=50;
    limit_conn conn_limit   10;
    include /etc/nginx/includes/common_rate_limiting.conf;
    include /etc/nginx/security/security_headers.conf;

    # Proxy to SSR server
    include /etc/nginx/includes/common_proxy_ssr.conf;

    # Add cache-busting headers
    include /etc/nginx/includes/common_cache_busting.conf;
}

# Private session location
location ~* ^/private($|/) {
    limit_req   zone=general_req_limit  burst=50;
    limit_conn conn_limit   10;
    include /etc/nginx/includes/common_rate_limiting.conf;
    include /etc/nginx/security/security_headers.conf;
    
    # Proxy to SSR server
    include /etc/nginx/includes/common_proxy_ssr.conf;

    # Add cache-busting headers
    include /etc/nginx/includes/common_cache_busting.conf;
}

# API locations
location /create-session {
    limit_req   zone=api_req_limit burst=80;
    limit_req_status    429;
    include /etc/nginx/security/security_headers.conf;

    # Proxy to Backend WebSocket server
    proxy_pass https://backend_ws; # If your backend is listening on HTTP (not HTTPS), use http:// instead
    include /etc/nginx/includes/common_proxy_ws.conf;
}

# WebSocket location
location /ws {
    limit_req   zone=api_req_limit burst=80;
    limit_req_status    429;
    include /etc/nginx/security/security_headers.conf;

    # Proxy to Backend WebSocket server
    proxy_pass https://backend_ws$uri; # If your backend is listening on HTTP (not HTTPS), use http:// instead
    include /etc/nginx/includes/common_proxy_ws.conf;
}

# SSO file handling
# Explicitly serve robots.txt with correct content type
location = /robots.txt {
    limit_req   zone=seo_req_limit burst=20;
    limit_conn  conn_limit  10;
    include /etc/nginx/includes/common_rate_limiting.conf;

    include /etc/nginx/security/security_headers.conf;
    add_header Content-Type text/plain;
    expires 1d;

    root /usr/share/nginx/html/browser;
    try_files $uri /robots.txt =404;
}

# Explicitly serve sitemap.xml with correct content type
location = /sitemap.xml {
    limit_req   zone=seo_req_limit burst=20;
    limit_conn  conn_limit  10;
    include /etc/nginx/includes/common_rate_limiting.conf;

    include /etc/nginx/security/security_headers.conf;
    add_header Content-Type application/xml;
    expires 1d;

    root /usr/share/nginx/html/browser;
    try_files $uri /sitemap.xml =404;
}

# Security blocks
# Block access to hidden files and common VCS directories
location ~ /\. {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Include security headers
    include /etc/nginx/security/security_headers.conf;

    # Return 404 page
    return  302 /404;
    access_log off;
    log_not_found off;
}

# Block specific version control system directories
location ~ /(\.git|\.hg|\.bzr|\.svn|BitKeeper|_darcs|CVS)/ {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Include security headers
    include /etc/nginx/security/security_headers.conf;

    # Return 404 page
    return  302 /404;
    access_log off;
    log_not_found off;
}

# Block additional sensitive patterns
location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|env|DS_Store|aspx)$ {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Include security headers
    include /etc/nginx/security/security_headers.conf;

    # Return 404 page
    return 302 /404;
    access_log      off;
    log_not_found   off;
}

# Block PHP files and common exploits with rate limiting
location ~* \.(php|phar|phtml|php\.|php7|php5|php4|php3)$ {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Return 404
    return 404;
}

# Block phpunit and other common attack paths with rate limiting
location ~* /(vendor|phpunit|eval-stdin|wp-content|wp-includes|wp-admin|cgi-bin|bin\/sh)(/|$) {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Return 404
    return 404;
}

# Block URL-encoded path traversal attempts with rate limiting
location ~* /(\.%2e|%2\d+e|%\.\.%\.\.%|\.\.|\.%2F|%2F\.\.)(/|$) {
    limit_req   zone=strict_req_limit burst=10 nodelay;
    limit_req_status    429;

    # Return 404
    return 404;
}

# Block access to aspx files with rate limiting
location = /Login.aspx {
    limit_req   zone=general_req_limit burst=10 nodelay;
    limit_req_status    429;
    
    # Return 404
    return 404;
}
