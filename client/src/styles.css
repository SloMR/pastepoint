@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  transition:
    background-color 300ms,
    color 300ms;
}

* {
  transition: border-color 0.2s ease-in-out;
  backface-visibility: hidden;
}

.no-geopattern {
  z-index: 10000 !important; /* Higher than the pattern's 9999 */
}

.modal,
.toast,
.dropdown {
  z-index: 10001 !important;
}

.geopattern {
  position: relative;
}

.geopattern::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: repeating-linear-gradient(30deg, rgb(0 0 0 / 8%) 0 1px, transparent 1px 20px),
    repeating-linear-gradient(-30deg, rgb(0 0 0 / 8%) 0 1px, transparent 1px 20px),
    repeating-linear-gradient(90deg, rgb(0 0 0 / 8%) 0 1px, transparent 1px 26px);
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: multiply;
  opacity: 0.6;
}

.dark .geopattern::before {
  background: repeating-linear-gradient(30deg, rgb(255 255 255 / 20%) 0 1px, transparent 1px 20px),
    repeating-linear-gradient(-30deg, rgb(255 255 255 / 20%) 0 1px, transparent 1px 20px),
    repeating-linear-gradient(90deg, rgb(255 255 255 / 20%) 0 1px, transparent 1px 26px);
  mix-blend-mode: overlay;
  opacity: 0.6;
}

.toast-container.toast-bottom-center .ngx-toastr {
  font-size: 0.83rem !important;
  margin: 0 auto !important;
}

.toast-container .ngx-toastr.toast-success,
.toast-container .ngx-toastr.toast-error,
.toast-container .ngx-toastr.toast-info,
.toast-container .ngx-toastr.toast-warning {
  background-size: 20px 20px !important;
}

/* Animation for elements that need to fade in */
@media screen and (prefers-reduced-motion: no-preference) {
  .animate-on-load {
    animation-duration: 0.3s;
    animation-fill-mode: both;
    animation-name: fade-in;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .animate-on-load {
    animation: none !important;
    opacity: 1 !important;
  }
}

/* Use hardware acceleration for animations */
.hardware-accelerated {
  transform: translateZ(0);
  will-change: transform;
}

/* Only use will-change when needed */
.will-animate:hover,
.will-animate:focus {
  will-change: transform, opacity;
}
