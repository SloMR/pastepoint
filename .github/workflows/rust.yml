name: Rust CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test Rust Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2025-01-25
          override: true
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            server/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Rust Format Check
        run: cargo fmt -- --check
        working-directory: server

      - name: Clippy Lints
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: server

      - name: Run Tests
        run: cargo test --all --verbose
        working-directory: server

# Uncomment if you want to include a security audit step
#      - name: Security Audit
#        uses: actions-rs/audit-check@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Release
        run: cargo build --release --verbose
        working-directory: server

# Uncomment if you want to upload the release artifact
#      - name: Upload Artifact
#        if: success() && github.ref == 'refs/heads/main'
#        uses: actions/upload-artifact@v3
#        with:
#          name: server-binary
#          path: server/target/release/server
