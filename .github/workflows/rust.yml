name: Rust CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test Rust Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2025-01-25
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            server/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Rust Format Check
        run: cargo fmt -- --check
        working-directory: server

      - name: Clippy Lints
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: server

      - name: Run Tests
        run: cargo test --all --verbose
        working-directory: server

      - name: Build Release
        run: cargo build --release --verbose
        working-directory: server

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin
        working-directory: server

      - name: Run Coverage
        run: cargo tarpaulin --out Xml --output-dir coverage --all
        working-directory: server

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: server/coverage/cobertura.xml
          flags: rust
          name: rust-coverage
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: SloMR/pastepoint
